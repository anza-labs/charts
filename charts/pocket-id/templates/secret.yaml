{{- if .Values.secret.create -}}
{{- $provider := default "sqlite" .Values.database.provider }}
{{- $dbConnection := .Values.database.connectionString | required ".Values.database.connectionString is required." }}
{{- if eq $provider "postgres" }}
  {{- $validPrefixes := list "postgres://" "postgresql://" }}
  {{- $isValid := false }}
  {{- range $prefix := $validPrefixes }}
    {{- if and (not $isValid) (hasPrefix $prefix $dbConnection) }}
      {{- $isValid = true }}
    {{- end }}
  {{- end }}
  {{- if not $isValid }}
    {{- fail (printf "Invalid database connectionString: %s. .Values.database.connectionString must start with one of [%s] when .Values.database.provider is 'postgres'." $dbConnection (join ", " $validPrefixes)) }}
  {{- end }}
{{- else if eq $provider "sqlite" }}
  {{- if not (hasPrefix "file:data/pocket-id.db" $dbConnection) }}
    {{- fail (printf "Invalid database connectionString: %s. .Values.database.connectionString must start with 'file:data/pocket-id.db' when .Values.database.provider is 'sqlite'." $dbConnection) }}
  {{- end }}
{{- else }}
  {{- fail (printf "Invalid database provider: %s. .Values.database.provider must be 'sqlite' or 'postgres'." $provider) }}
{{- end }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "pocket-id.secret" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pocket-id.labels" . | nindent 4 }}
type: Opaque
stringData:
  {{- if .Values.maxmindLicenseKey }}
  MAXMIND_LICENSE_KEY: "{{ .Values.maxmindLicenseKey }}"
  {{- end }}
  DB_CONNECTION_STRING: "{{ $dbConnection }}"
{{- end }}
