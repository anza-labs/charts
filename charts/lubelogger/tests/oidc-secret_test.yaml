# yaml-language-server: $schema=https://raw.githubusercontent.com/helm-unittest/helm-unittest/main/schema/helm-testsuite.json
suite: OIDC Secret

templates:
  - oidc-secret.yaml

tests:
  - it: Should not create OIDC Secret
    set:
      oidc.create: false
    asserts:
      - hasDocuments:
          count: 0

  - it: Should fail to create OIDC Secret (missing providerName)
    set:
      oidc.create: true
    asserts:
      - failedTemplate:
          errorMessage: ".Values.oidc.providerName is required."

  - it: Should fail to create OIDC Secret (missing clientId)
    set:
      oidc.create: true
      oidc.providerName: "MyOIDC"
    asserts:
      - failedTemplate:
          errorMessage: ".Values.oidc.clientId is required."

  - it: Should fail to create OIDC Secret (missing clientSecret)
    set:
      oidc.create: true
      oidc.providerName: "MyOIDC"
      oidc.clientId: "client-id"
    asserts:
      - failedTemplate:
          errorMessage: ".Values.oidc.clientSecret is required."

  - it: Should fail to create OIDC Secret (missing authURL)
    set:
      oidc.create: true
      oidc.providerName: "MyOIDC"
      oidc.clientId: "client-id"
      oidc.clientSecret: "client-secret"
    asserts:
      - failedTemplate:
          errorMessage: ".Values.oidc.authURL is required."

  - it: Should fail to create OIDC Secret (missing tokenURL)
    set:
      oidc.create: true
      oidc.providerName: "MyOIDC"
      oidc.clientId: "client-id"
      oidc.clientSecret: "client-secret"
      oidc.authURL: "https://example.com/auth"
    asserts:
      - failedTemplate:
          errorMessage: ".Values.oidc.tokenURL is required."

  - it: Should fail to create OIDC Secret (missing redirectURL)
    set:
      oidc.create: true
      oidc.providerName: "MyOIDC"
      oidc.clientId: "client-id"
      oidc.clientSecret: "client-secret"
      oidc.authURL: "https://example.com/auth"
      oidc.tokenURL: "https://example.com/token"
    asserts:
      - failedTemplate:
          errorMessage: ".Values.oidc.redirectURL is required."

  - it: Should fail to create OIDC Secret (missing logOutURL)
    set:
      oidc.create: true
      oidc.providerName: "MyOIDC"
      oidc.clientId: "client-id"
      oidc.clientSecret: "client-secret"
      oidc.authURL: "https://example.com/auth"
      oidc.tokenURL: "https://example.com/token"
      oidc.redirectURL: "https://myapp.com/callback"
      oidc.scope: "openid email"
      oidc.validateState: true
      oidc.usePKCE: true
      oidc.disableRegularLogin: true
      oidc.userInfoURL: "https://example.com/userinfo"
    asserts:
      - failedTemplate:
          errorMessage: ".Values.oidc.logOutURL is required."

  - it: Should render a OIDC Secret with required OIDC fields
    set:
      oidc.create: true
      oidc.providerName: "MyOIDC"
      oidc.clientId: "client-id"
      oidc.clientSecret: "client-secret"
      oidc.authURL: "https://example.com/auth"
      oidc.tokenURL: "https://example.com/token"
      oidc.redirectURL: "https://myapp.com/callback"
      oidc.scope: "openid email"
      oidc.validateState: true
      oidc.usePKCE: true
      oidc.disableRegularLogin: false
      oidc.userInfoURL: "https://example.com/userinfo"
      oidc.logOutURL: "https://example.com/logout"
    asserts:
      - isKind:
          of: Secret
      - equal:
          path: stringData.OpenIDConfig__Name
          value: "MyOIDC"
      - equal:
          path: stringData.OpenIDConfig__ClientId
          value: "client-id"
      - equal:
          path: stringData.OpenIDConfig__ClientSecret
          value: "client-secret"
      - equal:
          path: stringData.OpenIDConfig__AuthURL
          value: "https://example.com/auth"
      - equal:
          path: stringData.OpenIDConfig__TokenURL
          value: "https://example.com/token"
      - equal:
          path: stringData.OpenIDConfig__RedirectURL
          value: "https://myapp.com/callback"
      - equal:
          path: stringData.OpenIDConfig__Scope
          value: "openid email"
      - equal:
          path: stringData.OpenIDConfig__ValidateState
          value: "true"
      - equal:
          path: stringData.OpenIDConfig__UsePKCE
          value: "true"
      - equal:
          path: stringData.OpenIDConfig__DisableRegularLogin
          value: "false"
      - equal:
          path: stringData.OpenIDConfig__UserInfoURL
          value: "https://example.com/userinfo"
      - equal:
          path: stringData.OpenIDConfig__LogOutURL
          value: "https://example.com/logout"
