name: autogen

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  process-pr:
    if: |
      github.actor == 'shanduur-auto' &&
      github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest

    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - run: |
          wget -O /usr/local/bin/semver \
            https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver
          chmod +x /usr/local/bin/semver

      - run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.COMMIT_SIGNING }}" > ~/.ssh/signing_key
          chmod 600 ~/.ssh/signing_key
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/signing_key
          git config user.name shanduur-auto
          git config user.email 75127809+shanduur-auto@users.noreply.github.com
          git config gpg.format ssh
          git config user.signingkey ~/.ssh/signing_key
          git config commit.gpgsign true

      - id: extract_info
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          ./hack/autogen.sh "${{ github.event.pull_request.title }}" "${{ github.event.pull_request.number }}" "${GITHUB_ENV}"

      - uses: actions/setup-go@v5
        with:
          go-version-file: ./go.mod

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"
          check-latest: true

      - run: |
          pip install -r ./hack/requirements.txt

      - run: |
          make ci CHART=charts/${{ env.chart_name }} VERSION=${{ env.chart_version }}

      - run: |
          git add .
          git commit -sm "fix: generated chart ${{ env.chart_name }} version ${{ env.chart_version }}" || echo "skip_push=true" >> "${GITHUB_ENV}"

      - uses: ad-m/github-push-action@master
        if: env.branch != 'main' && env.branch != '' && env.skip_push != 'true'
        with:
          github_token: ${{ secrets.PAT }}
          branch: ${{ env.branch }}
